
// Задача 2. Тут 2 варианта сделал, они ниже в коде отмечены. Какой бы вариант не использовать, они оба изменяют начальный массив.
// Если мы хотим оставить начальный массив, то надо его просто скопировать и работать с копией. Это я уже не стал рассписывать, так как будет громостко и в ТЗ у нас такого условия нет.

let rows = 10;                                                                  // Задаем количество элементов "строк". Можно менять на любое натуральное число
let columns = 10;                                                               // Задаем количество элементов "столбцов". Можно менять на любое натуральное число
let arr = new Array(rows);                                                      // Обявляем переменную и присваеваем ей массив длинной в указанное количество элементов "строк"

for (let i = 0; i < arr.length; i++) {                                          // Запускаем цикл перебора указанного количества элементов "строк"
    arr[i] = new Array(columns);                                                // Каждому элементу "строке" создаем массив с указанным количеством элементов "столбцов", таким образом получая многомерный массив
    for (let j = 0; j < arr[i].length; j++) {                                   // Перебираем все элементы многомерного массива
        arr[i][j] = Math.floor(Math.random() * 41 - 20);                        // Каждому элементу присваиваем случайное значение от -20 до 20
    }
}

document.write('-------------------- Source Array --------------------<br>');   // Просто строка вывода для наглядности

for (let i = 0; i < arr.length; i++) {                                          // Перебираем все элементы многомерного массива
    for(let j = 0; j < arr[i].length; j++) {
        document.write(arr[i][j] + ' | ');                                      // Каждый выводим с разделителем
    }
    document.write('<br>');
}

document.write('------------------------ Sums ------------------------<br>');   // Просто строка вывода для наглядности

let columnSum = 0;                                                              // Счетчик суммы значений столбцов

//----------------------------------------------- Вариант 1 с методом splice -----------------------------------------------

for (let i = 0; i < columns; i++) {                                             // Запускаем цикл где счетчик i будет служить нам номером столбца
    for (let j = 0; j < arr.length; j++) {                                      // Вложенный цикл, где счиетчик j будет перебирать строки столбца
        columnSum += arr[j][i];                                                 // Суммируем в счетчик суммы значения каждой строки в столбце
    }
    document.write(columnSum + ' | ');                                          // Выводим суммы значений столбцов под ними для наглядности
    if (columnSum < 0) {                                                        // Проверка по условию ТЗ что сумма значений элементов столбцов меньше нуля
        for (let j = 0; j < arr.length; j++){                                   // Запускаем цикл для удаления элементов
            arr[j].splice([i], 1);                                              // В каждой строке удаляем один элемент в текущем столбце, таки образом удаляя весь столбец
        }
        i--;                                                                    // Так как длинна масива уменьшилась на один элемент в каждой строке, надо отступить на шаг назад, так как индекс следующего столбца сместится на еденицу назад;
        columns--;                                                              // Количество столбцов также необходимо уменьшить, чтобы не было лищних итераций
    }
    columnSum = 0;                                                              // Обнуляем счетчик суммы значений стольцов. Цикл повторяется
}                                                                               // Пока не переберет все столбцы

//----------------------------------------------- Вариант 2 с методом slice -----------------------------------------------

//let arr2 = [];                                                                           // Обявляем буферный массив
//
//for (let i = 0; i < columns; i++) {
//   for (let j = 0; j < arr.length; j++) {
//       columnSum += arr[j][i];
//   }
//   document.write(columnSum + ' | ');
//   if (columnSum < 0) {
//       for (let j = 0; j < arr.length; j++){
//           arr2.push(arr[j].slice(0, i).concat(arr[j].slice(i + 1, arr[j].length)));     // Добавляем в буферный массив кокатинцаю двух массивов. Первого - до удаленного элемента, второго - после.
//       }
//       arr = arr2;                                                                       // Присваиваем основному массиву значение буферного
//       i--;
//       columns--;
//       arr2 = [];                                                                        // Чистим буферный массив
//   }
//   columnSum = 0;
//}

document.write('<br>');
document.write('--------------------- Final Array --------------------<br>');   // Просто строка вывода для наглядности

for (let i = 0; i < arr.length; i++) {                                          // Снова перепибраем массив и выводим значения чтобы увидеть что получилось
    for(let j = 0; j < arr[i].length; j++) {
        document.write(arr[i][j] + ' | ');
    }
    document.write('<br>');
}

document.write('------------------------------------------------------<br>');